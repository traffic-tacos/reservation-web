name: Build & Push Docker to ECR

on:
  push:
    branches: [ "main" ]
    tags: [ "v*.*.*" ]
  workflow_dispatch:
    inputs:
      build_env:
        description: "Vite build env (ex: production, staging)"
        required: false
        default: "production"

permissions:
  contents: read
  id-token: write   # OIDC 사용 시 필요

env:
  AWS_REGION: ap-southeast-2
  AWS_ACCOUNT_ID: "137406935518"                                                     # ECR 변경되면 자동화 필요
  ECR_REGISTRY: "137406935518.dkr.ecr.ap-southeast-2.amazonaws.com"                  # ECR 변경되면 자동화 필요
  ECR_REPOSITORY: "traffic-tacos/traffic-tacos-app"
  IMAGE_NAME: "traffic-tacos/traffic-tacos-app"

jobs:
  docker:
    name: Build & Push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # IAM Role 예: arn:aws:iam::<account>:role/github-actions-ecr-pusher
      - name: Configure AWS credentials (OIDC)
        if: ${{ !secrets.AWS_ACCESS_KEY_ID }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=short
            type=ref,event=branch
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VITE_BUILD_ENV=${{ inputs.build_env || 'production' }}

      - name: Print pushed image tags
        run: echo "${{ steps.meta.outputs.tags }}"
